{
	"name": "DF_XMLtoJSON_FLX",
	"properties": {
		"folder": {
			"name": "FLX"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "SourceXML"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FLX_OUT",
						"type": "DatasetReference"
					},
					"name": "SinkingToJSON",
					"rejectedDataLinkedService": {
						"referenceName": "IngressBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "SelectingAndReorderingColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     param_sourcefilename as string,",
				"     param_pipelinename as string",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     wildcardPaths:[($param_sourcefilename)]) ~> SourceXML",
				"SourceXML select(mapColumn(",
				"          mode = {flx.Flight.{@mode}},",
				"          aircraftRegistration = {flx.Flight.FId.Reg},",
				"          arrivalAirport,",
				"          atc,",
				"          departureAirport,",
				"          designator,",
				"          domIntFlag = {flx.Flight.FId.DI},",
				"          flightDate = {flx.Flight.FId.Dte},",
				"          flightNr = {flx.Flight.FId.Nr},",
				"          operator,",
				"          flightSuffix = {flx.Flight.FId.Sf},",
				"          scheduledArrivalAirport,",
				"          serviceType,",
				"          timestamps",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectingAndReorderingColumns",
				"SelectingAndReorderingColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[(concat($param_pipelinename, '-', $param_sourcefilename, '-', toString(currentTimestamp(), 'yyyyMMddHHmmss'), '.json'))],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkingToJSON"
			]
		}
	}
}